/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

/ {
    behaviors {
        td: tapdance {
            compatible = "zmk,behavior-hold-tap";
            label = "TAPDANCE";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_caps_word {
            timeout-ms = 100;
            bindings = <&caps_word>;
            key-positions = <17 18>;
        };

        combo_esc {
            timeout-ms = 100;
            bindings = <&kp ESC>;
            key-positions = <2 3>;
        };

        combo_tab {
            timeout-ms = 100;
            bindings = <&kp TAB>;
            key-positions = <14 15>;
        };

        combo_lhand_ctrl {
            timeout-ms = 100;
            bindings = <&kp LCTRL>;
            key-positions = <26 28>;
        };

        combo_rhand_ctrl {
            timeout-ms = 100;
            bindings = <&kp LCTRL>;
            key-positions = <31 33>;
        };

        combo_backspace {
            timeout-ms = 100;
            bindings = <&kp BACKSPACE>;
            key-positions = <8 9>;
        };

        combo_quotes {
            timeout-ms = 100;
            bindings = <&td DOUBLE_QUOTES SINGLE_QUOTE>;
            key-positions = <20 21>;
        };

        combo_lhand_shift {
            timeout-ms = 100;
            bindings = <&kp LSHFT>;
            key-positions = <16 15>;
        };

        combo_rhand_shift {
            timeout-ms = 100;
            bindings = <&kp LSHIFT>;
            key-positions = <19 20>;
        };

        new_combo {
            timeout-ms = 100;
            bindings = <&kp CAPSLOCK>;
            key-positions = <15 16 19 20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ----------------------------------- QWERTY -------------------------------------------------
            // | ESC  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | TAB  |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | CTRL |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ALT  |
            //                    | ENT | LWR | GUI |   | SPC |      |shift|

            bindings = <
   &kp ESC   &kp Q   &kp W    &kp E   &kp R     &kp T              &kp Y   &kp U      &kp I    &kp O              &kp P         &kp BSPC
   &kp TAB   &kp A   &kp S    &kp D   &kp F     &kp G              &kp H   &kp J      &kp K    &kp L  &td LS(SEMI) SEMI  &td LS(SQT) SQT
 &kp LCTRL   &kp Z   &kp X    &kp C   &kp V     &kp B              &kp N   &kp M  &kp COMMA  &kp DOT  &td LS(FSLH) FSLH         &kp LSHFT
                            &kp RET   &to 1  &kp LGUI          &kp SPACE   &to 0  &kp LALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |      |  1  |  2  |  3  |  4  |  5  |   |  6  |  7   |  8  |  9  |  0  |      | 
            // |      |  \  |  *  |  +  |  -  |  =  |   |  <  |  {   |  (  |  [  |     |      |
            // |      |  `  |  _  |  #  |  %  | "|" |   |     |      |     |     |     |      |
            //                    | GUI | RSE | SPC |   | ENT |QWERTY| ALT |

            bindings = <
 &trans  &td LS(N1) N1  &td LS(N2) N2  &td LS(N3) N3  &td LS(N4) N4  &td LS(N5) N5          &td LS(N6) N6  &td LS(N7) N7  &td LS(N8) N8  &td LS(N9) N9  &td LS(N0) N0  &trans
 &trans       &kp BSLH       &kp AMPS       &kp PLUS      &kp MINUS      &kp EQUAL              &td GT LT  &td RBRC LBRC  &td RPAR LPAR  &td RBKT LBKT         &trans  &trans
 &trans      &kp GRAVE      &kp UNDER       &kp HASH      &kp PRCNT       &kp PIPE                 &trans         &trans         &trans         &trans         &trans  &trans
                                              &trans          &to 2         &trans                 &trans          &to 0         &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // | BTC  |     |     |     |     |     |   |     | HOME| UP  | END |     |power toggle|
            // | BT1  |     |     |     |     |     |   |     | LFT | DWN | RGT |     |      |
            // | BT2  |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI | LWR | SPC |   | ENT |     | ALT |

            bindings = <
 &trans  &out OUT_BLE  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &ext_power EP_TOG          &trans  &kp HOME    &kp UP    &kp END  &trans  &trans
 &trans        &trans        &trans        &trans        &trans             &trans          &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &trans  &trans
 &trans        &trans        &trans        &trans        &trans             &trans          &trans    &trans    &trans     &trans  &trans  &trans
                                           &trans         &to 1             &trans          &trans     &to 0    &trans
            >;
        };
    };
};
